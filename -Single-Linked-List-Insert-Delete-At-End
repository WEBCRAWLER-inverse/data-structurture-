#include <stdio.h>
#include <stdlib.h>

// Define the structure for a linked list node
struct Node {
    int data;
    struct Node* next;
};

// Function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to insert a node at the end of the list
void insertAtEnd(struct Node** head, int data) {
struct Node* temp = *head;
    struct Node* newNode = createNode(data);

    // If the list is empty, the new node becomes the head
    if (*head == NULL) {
	*head = newNode;
	return;
    }

    // Traverse the list to find the last node

    while (temp->next != NULL) {
        temp = temp->next;
    }
    
    // Set the last node's next pointer to the new node
    temp->next = newNode;
}

// Function to delete a node from the end of the list
void deleteAtEnd(struct Node** head) {
struct Node* temp = *head;
    if (*head == NULL) {
	printf("List is empty. Nothing to delete.\n");
	return;
    }

    // If there's only one node, delete it
    if ((*head)->next == NULL) {
	free(*head);
	*head = NULL;
	return;
    }

    // Traverse the list to find the second last node

    while (temp->next->next != NULL) {
        temp = temp->next;
    }
    
    // Free the last node and set the second last node's next to NULL
    free(temp->next);
    temp->next = NULL;
}

// Function to print the linked list
void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    // Start with an empty list
    struct Node* head = NULL;

    // Insert elements at the end
    insertAtEnd(&head, 10);
    insertAtEnd(&head, 20);
    insertAtEnd(&head, 30);
    
    printf("Linked List after insertion: ");
    printList(head);
    
    // Delete elements from the end
    deleteAtEnd(&head);
    printf("Linked List after deletion: ");
    printList(head);

    deleteAtEnd(&head);
    printf("Linked List after deletion: ");
    printList(head);

    deleteAtEnd(&head);
    printf("Linked List after deletion: ");
    printList(head);
    getch();
    return 0;
}
